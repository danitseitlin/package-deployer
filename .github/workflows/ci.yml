name: CI
on:
  pull_request:
jobs:
  pkg_deployment:
    env:
      NPM_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      G_AUTH_TOKEN: ${{secrets.G_AUTH_TOKEN}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setting up the environment
      run: npm install && npm run pkg-build && sudo npm link
    - name: Deploying version
      run: sudo deploy-pkg package-deployer --npm-access-token=${{secrets.NPM_AUTH_TOKEN}} --github-access-token=${{secrets.G_AUTH_TOKEN}} --github-owner=danitseitlin --github-repo=package-deployer --dry-run --publish-pretty-output --debug
      
  action_deployment:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      G_AUTH_TOKEN: ${{secrets.G_AUTH_TOKEN}}
    steps:
    - uses: actions/checkout@v2
    - name: Setting up the environment
      run: npm install
    - name: Deploying version
      uses: ./
      with:
        pkg_name: package-deployer
        pkg_managers: '[github, npm]'
        npm_registry: registry.npmjs.org
        npm_access_token: ${{secrets.NPM_AUTH_TOKEN}}
        github_access_token: ${{secrets.G_AUTH_TOKEN}}
        dry_run: true
        debug: true
    - name: Deploying version for non existing pkg
      uses: ./
      with:
        pkg_name: package-deployer-non
        pkg_managers: '[github, npm]'
        npm_registry: registry.npmjs.org
        npm_access_token: ${{secrets.NPM_AUTH_TOKEN}}
        github_access_token: ${{secrets.G_AUTH_TOKEN}}
        dry_run: true
        debug: true
    - name: Deploying version with main pkg manager NPM
      uses: ./
      with:
        pkg_name: package-deployer
        main_pkg_manager: npm
        pkg_managers: '[github, npm]'
        npm_registry: registry.npmjs.org
        npm_access_token: ${{secrets.NPM_AUTH_TOKEN}}
        github_access_token: ${{secrets.G_AUTH_TOKEN}}
        dry_run: true
        debug: true
    - name: Deploying version with main pkg manager GitHub
      uses: ./
      with:
        pkg_name: package-deployer
        main_pkg_manager: github
        pkg_managers: '[github, npm]'
        npm_registry: registry.npmjs.org
        npm_access_token: ${{secrets.NPM_AUTH_TOKEN}}
        github_access_token: ${{secrets.G_AUTH_TOKEN}}
        dry_run: true
        debug: true
